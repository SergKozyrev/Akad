@font-face{font-family:open-sans;src:url(../fonts/OpenSans-Regular.eot);src:url(../fonts/OpenSans-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/OpenSans-Regular.woff2) format("woff2"),url(../fonts/OpenSans-Regular.woff) format("woff"),url(../fonts/OpenSans-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:montserrat;src:url(../fonts/Montserrat-Bold.eot);src:url(../fonts/Montserrat-Bold.eot?#iefix) format("embedded-opentype"),url(../fonts/Montserrat-Bold.woff2) format("woff2"),url(../fonts/Montserrat-Bold.woff) format("woff"),url(../fonts/Montserrat-Bold.ttf) format("truetype");font-weight:700;font-style:normal}blockquote,body,code,dd,div,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,input,li,p,pre,td,textarea,th,ul{margin:0;padding:0}table{border-collapse:collapse;border-spacing:0}abbr,fieldset,img{border:0}address,caption,cite,code,dfn,em,strong,th,var{font-style:normal;font-weight:400}ul li{list-style:none}caption,th{text-align:left}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}sup{vertical-align:text-top}sub{vertical-align:text-bottom}legend{color:#000}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}img{max-width:100%;height:auto}*,::after,::before{box-sizing:border-box}body,html{height:100%}body{font:16px/1 open-sans;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;background:#fff;color:#999}footer,header{-webkit-box-flex:0;-webkit-flex:0 0 auto;flex:0 0 auto}main{-webkit-box-flex:1;-webkit-flex:1 0 auto;flex:1 0 auto}a{text-decoration:none;color:#60606e}.container{max-width:1170px;margin:0 auto;padding-left:15px;padding-right:15px}.title{font:700 30px/1 montserrat,sans-serif;display:inline-block;position:relative;margin-bottom:30px;color:#60606e;text-transform:uppercase;z-index:1}.title::after{content:"";position:absolute;top:50%;left:0;display:block;width:68px;height:22px;background:#7beec7;z-index:-1}.title--small{font-size:18px;line-height:28px}.title--small::after{content:none}.desc{font:400 16px/24px open-sans,sans-serif;width:100%;max-width:715px;margin:0 auto 100px;color:#999}.btn{display:inline-block;padding:15px 24px;font-family:montserrat,sans-serif;font-weight:700;text-transform:uppercase;-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out}.btn--primary{background:#7beec7;color:#fff}.btn--secondary{background:#fff;color:#7beec7}.btn--form{padding:17px 48px;border:none}.btn--form:hover{cursor:pointer}.btn:hover{-webkit-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01);box-shadow:0 0 10px rgba(0,0,0,.2)}.menu__list{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap}.menu__item+.menu__item{margin-left:20px}.menu__link{font:bold 12px/1 montserrat,sans-serif;position:relative;text-transform:uppercase}.menu__link::before{background:#60606e;content:"";position:absolute;top:50%;left:0;width:50%;height:1px;opacity:0;-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out}.menu__link:hover::before{top:-5px;opacity:1}.open-menu{display:none;width:30px;height:17px;padding:0;border:none;background:0 0;position:relative;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);-webkit-transition:.5s ease-in-out;transition:.5s ease-in-out;overflow:hidden}.open-menu:focus{outline:0}.open-menu:hover{cursor:pointer}.open-menu__stroke{display:block;position:absolute;height:1px;width:100%;background:#60606e;border-radius:9px;opacity:1;left:0;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);-webkit-transition:.25s ease-in-out;transition:.25s ease-in-out}.open-menu__stroke--one{top:0}.open-menu__stroke--two{top:8px}.open-menu__stroke--three{top:16px}.open-menu--active .open-menu__stroke--one{top:8px;-webkit-transform:rotate(135deg);-ms-transform:rotate(135deg);transform:rotate(135deg)}.open-menu--active .open-menu__stroke--two{opacity:0;left:-30px}.open-menu--active .open-menu__stroke--three{top:8px;-webkit-transform:rotate(-135deg);-ms-transform:rotate(-135deg);transform:rotate(-135deg)}.primary-hero{min-height:850px;padding:225px 15px 0;width:100%;background:url(../img/hero-first-bg.png) 0 0/cover no-repeat #fff}.primary-hero__text{max-width:555px;margin:0 auto;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;align-items:center;text-align:center}.primary-hero__title{border:10px solid #60606e;font-size:48px;line-height:80px;padding:0 29px}.primary-hero__title::after{content:none}.primary-hero__title--small{padding:2px 25px;background:#7beec7;margin-bottom:0;font-size:14px}.primary-hero__title--small::after{content:none}.secondary-hero{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;align-items:center;min-height:500px;width:100%;margin-bottom:150px;background:url(../img/hero-second-bg.png) 0 0/cover no-repeat #dee3e7}.secondary-hero__text{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;align-items:center}.secondary-hero__title{margin-bottom:26px;font-size:36px}.secondary-hero__title::after{content:none}.breadcrumbs{font:700 14px montserrat,sans-serif;color:#60606e;text-transform:uppercase}.input{font:14px open-sans,sans-serif;padding:14px 20px;border:1px solid rgba(0,0,0,.1);color:#999}.input:focus{outline:0}.fields-wrap{position:relative;-webkit-box-flex:1;-webkit-flex:1 1 auto;flex:1 1 auto}.fields-wrap__input{width:100%;height:100%}.fields-wrap__input:focus~.fields-wrap__placeholder,.fields-wrap__input:valid~.fields-wrap__placeholder{background:#fff;color:#7beec7;font-size:10px;top:0;left:5px;padding:5px}.fields-wrap__placeholder{font:700 12px montserrat,sans-serif;position:absolute;top:50%;left:20px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);text-transform:uppercase;color:#999;-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out;z-index:1}.social{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:end;-webkit-justify-content:flex-end;justify-content:flex-end}.social__item+.social__item{margin-left:20px}.social__link{color:#999;font-size:18px;-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out}.social__link:hover{color:#7beec7}.created-by{font:14px/1 open-sans,sans-serif;display:inline-block;margin-bottom:20px;color:#cdcdcd;text-transform:uppercase}.header{position:absolute;top:0;left:0;width:100%;background:0 0}.header-inner{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;align-items:center;padding:41px 0}.header-logo{font:700 18px/1 montserrat,sans-serif;color:#60606e;text-transform:uppercase}.history{margin-top:-300px;margin-bottom:150px}.history__inner{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between}.history__desc{margin-bottom:27px}.history__img{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(41.66667% - 30px)}.history__text{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(50% - 30px);padding-top:30px}.history__btn{float:right}.choose{margin-bottom:90px;text-align:center}.features{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between}.features-content{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(50% - 30px);-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;padding-top:20px}.features-content__inner{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px}.features-reason{text-align:left;box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(50% - 30px);margin-bottom:60px}.features-reason__icon{display:inline-block;margin-bottom:5px;color:#60606e;font-size:36px;line-height:1}.features-reason__title{display:block;margin-bottom:15px}.features-reason__list{font:400 14px/1 open-sans,sans-serif;color:#999;text-transform:uppercase}.features-reason__item+.features-reason__item{margin-top:15px}.features-img{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(41.66667% - 30px)}.portfolio{text-align:center;margin-bottom:150px}.portfolio__inner{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between}.portfolio-category{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(25% - 30px)}.portfolio-category__title{text-align:left;line-height:48px}.portfolio-category__title::after{content:none}.portfolio-category__list{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;align-items:flex-start}.portfolio-category__item{font:700 14px/20px montserrat,sans-serif;margin-left:20px;margin-bottom:20px;color:#60606e;text-transform:uppercase;-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out}.portfolio-category__item:hover{cursor:pointer}.portfolio-category__item--active{padding:0 10px;color:#fff;background:#7beec7;margin-left:0}.portfolio-content{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(75% - 30px);-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between}.portfolio-content__list{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between}.portfolio-content__item{position:relative;box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(33.33333% - 30px);margin-bottom:30px;overflow:hidden}.portfolio-content__item:hover{cursor:pointer}.portfolio-content__item img{width:100%;vertical-align:middle}.portfolio-content__item-info{display:-webkit-box;display:-webkit-flex;display:flex;position:absolute;top:0;left:0;width:100%;height:100%;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;align-items:center;background:rgba(255,255,255,.8);-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);z-index:1;-webkit-transition:.3s ease-in-out;transition:.3s ease-in-out}.portfolio-content__item:hover .portfolio-content__item-info{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)}.newsletter{background:#7beec7}.newsletter__inner{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;margin-left:-15px;margin-right:-15px;padding:30px 0}.newsletter__text{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(50% - 30px)}.newsletter__title{margin-bottom:20px;color:#fff;line-height:40px}.newsletter-message{box-sizing:border-box;word-wrap:break-word;margin-left:15px;margin-right:15px;width:calc(50% - 30px);background:#fff;padding:20px 25px}.newsletter-message__title{margin-bottom:18px;line-height:40px}.newsletter-message__title::after{content:none}.newsletter-message__desc{margin-bottom:30px}.newsletter-message__form{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap}.footer{padding:50px 0}.footer__inner{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between}.footer-menu{margin-bottom:30px}.footer-menu__item{position:relative}.footer-menu__item:not(:last-child)::after{content:"-";position:absolute;right:-20px}.footer-menu__item+.footer-menu__item{margin-left:40px}.footer-menu__link{color:#cdcdcd;font-family:open-sans,sans-serif;font-weight:400}.footer-menu__link::before{content:"";position:absolute;top:20px;left:0;width:0;height:1px;background:#7beec7;opacity:1;-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out}.footer-menu__link:hover::before{width:50%;top:20px;left:0}@media screen and (max-width:992px){.desc{margin-bottom:25px}.history__img{width:calc(50% - 30px)}.history__text{padding-top:0}.choose{margin-bottom:120px}.features{-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center}.features-content{width:calc(83.33333% - 30px)}.features-reason{text-align:center}.features-img{display:none}.portfolio-category{width:calc(100% - 30px)}.portfolio-category__title{font-size:25px}.portfolio-category__list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center}.portfolio-category__item{margin-left:0}.portfolio-category__item+.portfolio-category__item{margin-left:20px}.portfolio-category__item--active{margin-left:0}.portfolio-content{width:calc(100% - 30px)}.newsletter__inner{-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center}.newsletter__text{display:none}.newsletter-message{width:calc(83.33333% - 30px)}}@media screen and (max-width:768px){.btn--form{width:100%}.open-menu{display:block}.fields-wrap{margin-bottom:10px}.social{-webkit-box-pack:center;-webkit-justify-content:center;justify-content:center}.created-by{text-transform:none}.header-menu__list{position:absolute;top:70px;right:0;display:none;width:100%;padding-bottom:20px;background:#fdfdfd;text-align:center;z-index:2}.header-menu__list--dark{background:#c9d1d9}.header-menu__list--active{display:block}.header-menu__item{margin-left:0}.header-menu__item+.header-menu__item{margin-left:0;margin-top:15px}.history__desc{margin:0 0 25px;text-align:justify}.history__img{width:calc(100% - 30px);margin-bottom:50px}.history__img img{width:100%}.features-reason,.history__text{width:calc(100% - 30px)}.features-reason{margin-bottom:30px}.portfolio-category__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;align-items:center}.portfolio-category__item,.portfolio-category__item+.portfolio-category__item{margin-left:0}.newsletter-message,.portfolio-content__item{width:calc(100% - 30px)}.newsletter-message{padding:10px 15px}.newsletter-message__desc{text-align:justify}.footer-menu__list,.footer__inner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;align-items:center}.footer-menu__item:not(:last-child)::after{content:none}.footer-menu__item+.footer-menu__item{margin-left:0;margin-top:15px}}@media screen and (max-width:585px){.primary-hero__title{border:5px solid #60606e;font-size:25px;line-height:50px;padding:0 20px}.primary-hero__desc{max-width:300px}}@media screen and (max-width:576px){.primary-hero{min-height:650px;margin-bottom:30px}.history{margin-top:0}}@media screen and (max-width:320px){.primary-hero__title{border:5px solid #60606e;font-size:20px;line-height:50px;padding:0 20px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
